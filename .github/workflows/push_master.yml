name: Build Lean project

on:
  push:
    branches:
      - master

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  style_lint:
    name: Lint style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Don't 'import Mathlib', use precise imports
        if: always()
        run: |
          ! (find LeanCamCombi -name "*.lean" -type f -print0 | xargs -0 grep -E -n '^import Mathlib$')

      - name: Files in LeanCamCombi.Mathlib can't import LeanCamCombi files outside LeanCamCombi.Mathlib
        run: |
          ! (find LeanCamCombi/Mathlib -name "*.lean" -type f -print0 | xargs -0 grep -E -n '^import LeanCamCombi.(?!Mathlib)')

  build_project:
    runs-on: ubuntu-latest
    name: Build project
    steps:

      # The following actions make sure the project builds properly.

      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install elan
        run: curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh -s -- -y --default-toolchain leanprover/lean4:4.18.0

      - name: Get cache
        run: ~/.elan/bin/lake exe cache get || true

      - name: Build project
        run: ~/.elan/bin/lake build LeanCamCombi

      - name: Cache documentation
        uses: actions/cache@v4
        with:
          path: website/docs
          key: MathlibDoc-${{ hashFiles('lake-manifest.json') }}
          restore-keys: MathlibDoc-

      - name: Build documentation
        run: scripts/build_docs.sh

      # - name: Build blueprint
      #   uses: xu-cheng/texlive-action@v2
      #   with:
      #     docker_image: ghcr.io/xu-cheng/texlive-full:20231201
      #     run: |
      #       # Install necessary dependencies and build the blueprint
      #       apk update
      #       apk add --update make py3-pip git pkgconfig graphviz graphviz-dev gcc musl-dev
      #       git config --global --add safe.directory $GITHUB_WORKSPACE
      #       git config --global --add safe.directory `pwd`
      #       python3 -m venv env
      #       source env/bin/activate
      #       pip install --upgrade pip requests wheel
      #       pip install pygraphviz --global-option=build_ext --global-option="-L/usr/lib/graphviz/" --global-option="-R/usr/lib/graphviz/"
      #       pip install leanblueprint
      #       leanblueprint pdf
      #       leanblueprint web

      # The following actions create and deploy the website.

      - name: Copy documentation to website/docs
        run: mv docs/build/* website/docs

      - name: Copy blueprint to website/blueprint
        run: |
          cp blueprint/print/print.pdf website/blueprint.pdf
          cp -r blueprint/web website/blueprint

      - name: Copy README.md to website/index.md
        run: cp README.md website/index.md

      - name: Upstreaming dashboard
        run: |
          mkdir -p website/_includes
          python3 scripts/upstreaming_dashboard.py

      - name: File dependencies
        run: |
          sudo apt-get update
          sudo apt install graphviz -y
          ~/.elan/bin/lake exe graph website/file_deps.pdf

      - name: Bundle dependencies
        uses: ruby/setup-ruby@v1
        with:
          working-directory: website
          ruby-version: "3.0" # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Bundle website
        working-directory: website
        run: JEKYLL_ENV=production bundle exec jekyll build

      - name: Upload docs & blueprint artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: website/_site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
